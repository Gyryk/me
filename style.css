@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@200;300;400;500;600;700&family=Roboto+Slab:wght@200;300;400;500&family=Source+Code+Pro&display=swap');

*
{
    margin: 0;
    padding: 0;
}

#trailer
{
    background-color: #fffcdf;
    height: 1.5rem;
    width: 1.5rem;
    border-color: transparent;
    border-radius: 1.5rem;

    position: fixed;
    top: 0;
    left: 0;
    z-index: 10000;

    pointer-events: none;
    opacity: 0;
    transition: opacity 0.5s ease;
}

#trailer-icon
{
    width: 0.75rem;
    transform: translate(50%, 30%);

    opacity: 0;
    transition: opacity 0.25s ease;
}

#trailer:not([data-type=""]) > #trailer-icon
{
    opacity: 1
}


body:hover > #trailer
{
    opacity: 1;
}

.interactable
{
    cursor: none;
}

.sidebar
{
    z-index: 0;
    background-color: #fffcdf;
    width: 1vw;
    height: 200vh;
}

.sideIcon img
{
    width: 13vw;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    padding-bottom: 0;
    justify-content: center;
    margin-bottom: 36%;
    z-index: 1;
}

#projects
{
    top: 25rem;
    position: fixed;
}
#home
{
    position: fixed;
}

#email
{
    bottom: 0.5vh;
    left: 1.25vw;
    position: fixed;
}
#twitter
{
    bottom: 0.5vh;
    left: 4.75vw;
    position: fixed;
}
#github
{
    bottom: 0.5vh;
    left: 8.25vw;
    position: fixed;
}
#linkedin
{
    bottom: 0.5vh;
    left: 11.75vw;
    position: fixed;
}

.contactIcon img
{
    width: 3vw;
}
.contactIcon a
{
    text-decoration: none;
}

.icons
{
    display: flex;
    z-index: 10;
}

.hamburger
{
    position: fixed;
    top: 2%;
}
.hamburger img
{
    width: 3rem;
}
.hamburger button
{
    background-color: transparent;
    border-color: transparent;
}

.nightmode
{
    position: fixed;
    right: 2%;
    top: 4%;
}
.nightmode img
{
    width: 4rem;
}
.nightmode button
{
    background-color: transparent;
    border-color: transparent;
}

.name
{
    height:105vh;
    width: 80vw;
    font-size: 6rem;
    margin: auto;
    text-align: center;
    font-family: Gunterz;
    font-weight: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container
{
    display: flex;
}

.main
{
    width: 99vw;
    font-family: 'Roboto Mono', monospace;
    background-color: #111111; /* try 0f0f0f or something if you don't like it*/
    color: #fffcdf;
    z-index: 2;
}

.titles
{
    opacity: 0;
    font-size: 2rem;
    font-weight: 700;
}

.infoText
{
    opacity: 0;
    font-size: 1.25rem;
    font-weight: 200;
    translate: -5vw;
}

.links
{
    text-decoration: none;
    color: #fffcdf;
    font-weight: 300;
}
.linksLight
{
    color: black;
    font-weight: 300;
}

.icon
{   
    opacity: 0;
    translate: 5vw;
}

.buttons
{
    opacity: 0;
    translate: 5vw;
}

.about
{
    padding: 1rem;
    border-radius: 1.5rem;
    border-color: transparent;
    background-color:#fffcdf;
    color: black;
    font-weight: 500;
    font-size: 1.5rem;
    font-family: 'Roboto Slab', serif;
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-top: 48px;
}
.about:hover
{
    background-color: #111111;
    border-color: transparent;
    color: #fffcdf;
}
.aboutLight
{
    background-color: #111111;
    color: #fffcdf;
}
.aboutLight:hover
{
    background-color: #fffcdf;
    color: black;
}

.mainInfo
{
    height: 56vh;
    width: 80vw;
    margin: auto;
    margin-top: 64px;
    display: flex;
    justify-content: space-around;
}

.mainBox
{
    height: 36vh;
    width: 80vw;
    margin: auto;
    margin-top: 96px;
    display: flex;
    justify-content: space-around;
    font-family: 'Roboto Slab', serif;
    font-size: 1em;
    font-weight: 300;
}

.myskills
{
    height: 40vh;
    width: 48vw;
    margin: auto;
    margin-top: 16px;
    margin-bottom: 96px;
    font-family: 'Roboto Slab', serif;
    font-size: 1em;
    font-weight: 300;
}

.mystory
{
    padding-left: 8%;
}

.recolor
{
    font-weight: 500;
    font-size: 1.1em;
}

.skillContainer
{
    display: flex;
    justify-content: space-around;
}

.icon img
{
    width: 24vw;
}

.skillLevels
{
    opacity: 0;
    animation: fadeInLeft 2s forwards ease-in-out;
}
.skillLevels img
{
    height: 40vh;
    margin: auto;
}

.intro
{
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.lightmode
{
    background-color: #fffcdf;
    color: black;
}

.sideLightMode
{
    background-color: #111111;
    color: #fffcdf;
}


.leftFade
{
    animation: fadeInLeft 1s forwards;
}
.rightFade
{
    animation: fadeInRight 1s forwards;
}
.topFade
{
    animation: fadeInTop 1s forwards;
}
.leftFadeOut
{
    animation: fadeOutLeft 1s forwards;
}
.rightFadeOut
{
    animation: fadeOutRight 1s forwards;
}
.topFadeOut
{
    animation: fadeOutTop 1s forwards;
}
.rotate
{
    animation: rotation 1s forwards;
}
.reset
{
    animation: reverseRotation 1s forwards;
}
.mainShrink
{
    animation: slideMain 1s forwards;
}
.sidebarGrow
{
    animation: growSidebar 1s forwards;
}
.mainGrow
{
    animation: mainSlide 1s forwards;
}
.sidebarShrink
{
    animation: shrinkSidebar 1s forwards;
}

.typing
{
    padding-left: 0%;
    margin-top: 96px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Source Code Pro', monospace;
    color: lime;
    position: relative;
    width: 100%;
}
.typing::after
{
    content: "|";
    color: white;
    font-size: 2em;
    background-color: #111111;
    position: absolute;
    right: 0;
    width: 92%;
    animation: coding 7s steps(69) alternate infinite, blinkingWhite 1s infinite;
}
.typingLight
{
    color: green;
}
.typingLight::after
{
    background-color: #fffcdf;
    color: black;
    animation: coding 7s steps(69) alternate infinite, blinkingBlack 1s infinite;
}

.python
{
    display: none;
}

.java
{
    display: inline-block;
}


@font-face 
{
    font-family: Dethrone;
    src: url('dethrone.ttf');
}

@font-face 
{
    font-family: Gunterz;
    src: url('Gunterz.otf');
}

@media screen and (max-width: 875px)
{
    .typing
    {
        color: transparent;
    } 
    .typing::after
    {
        background-color: transparent;
        color: transparent;
        animation: off;
    }
}

@media screen and (max-width: 1200px)
{
    .python
    {
        display: inline-block;
    }
    .java
    {
        display: none;
    }
}

@media screen and (max-width: 1300px)
{
    .name
    {
        font-size: 2em;
    }
    .titles
    {
        font-size: 1.25em;
    }
    .infoText
    {
        font-size: 0.75em;
    }
    .buttons button
    {
        font-size: 1em;
    }
}

@keyframes fadeInLeft
{
    0% 
    {
        opacity: 0;
        transform: translate3d(0, 0, 0);
    }
    100% 
    {
        opacity: 1;
        transform: translate3d(5vw, 0, 0);
    }
}

@keyframes fadeInRight 
{
    0% 
    {
        opacity: 0;
        transform: translate3d(0, 0, 0);
    }
    100% 
    {
        opacity: 1;
        transform: translate3d(-5vw, 0, 0);
    }
}

@keyframes fadeInTop 
{
    0% 
    {
        opacity: 0;
        transform: translate3d(0, 0, 0);
    }
    100% 
    {
        opacity: 1;
        transform: translate3d(0, -5vh, 0);
    }
}

@keyframes fadeOutLeft
{
    0%
    {
        opacity: 1;
        transform: translate3d(0, 0, 0)
    }
    100%
    {
        opacity: 0;
        transform: translate3d(-5vw, 0, 0)
    }
}

@keyframes fadeOutRight
{
    0%
    {
        opacity: 1;
        transform: translate3d(0, 0, 0)
    }
    100%
    {
        opacity: 0;
        transform: translate3d(5vw, 0, 0)
    }
}

@keyframes fadeOutTop
{
    0%
    {
        opacity: 1;
        transform: translate3d(0, 0, 0)
    }
    100%
    {
        opacity: 0;
        transform: translate3d(0, 5vh, 0)
    }
}

@keyframes coding 
{
    to
    {
        width: 2%;
    }
}

@keyframes blinkingWhite
{
    30%
    {
        color: white;
    }
    31%
    {
        color: transparent;
    }
    69%
    {
        color: transparent;
    }
    70%
    {
        color: white
    }
}

@keyframes blinkingBlack
{
    30%
    {
        color: black;
    }
    31%
    {
        color: transparent;
    }
    69%
    {
        color: transparent;
    }
    70%
    {
        color: black;
    }
}

@keyframes rotation 
{
    from 
    {
        transform: rotate(0deg);
    }
    to 
    {
        transform: rotate(180deg);
    }
}

@keyframes reverseRotation
{
    from
    {
        transform: rotate(180deg);
    }
    to
    {
        transform: rotate(0deg);
    }
}

@keyframes slideMain
{
    to
    {
        width: 84vw;
    }
}

@keyframes growSidebar
{
    to
    {
        width: 16vw;
    }
}

@keyframes mainSlide
{
    to
    {
        width: 99vw;
    }
}

@keyframes shrinkSidebar
{
    /*Use :root and var() so that you can do media queries */
    from
    {
        width: 16vw;
    }
    to
    {
        width: 1vw;
    }
}
